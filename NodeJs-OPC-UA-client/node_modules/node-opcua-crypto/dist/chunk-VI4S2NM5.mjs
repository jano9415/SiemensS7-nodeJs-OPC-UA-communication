import {
  TagType,
  _readStruct,
  hexDump,
  readTag
} from "./chunk-46EEAYVO.mjs";

// source/explore_asn1.ts
function t(tag) {
  return TagType[tag];
}
function bi(blockInfo, depth) {
  const indent = "  ".repeat(depth);
  const hl = blockInfo.position - blockInfo.start;
  return `${blockInfo.start.toString().padStart(5, " ")}:d=${depth} hl=${hl.toString().padEnd(3, " ")}  l=${blockInfo.length.toString().padStart(6, " ")} ${blockInfo.tag.toString(16).padEnd(2, " ")} ${indent} ${t(blockInfo.tag)}`;
}
function exploreAsn1(buffer) {
  console.log(hexDump(buffer));
  function dump(offset, depth) {
    const blockInfo = readTag(buffer, offset);
    dumpBlock(blockInfo, depth);
    function dumpBlock(blockInfo2, depth2) {
      console.log(bi(blockInfo2, depth2));
      if (blockInfo2.tag === 48 /* SEQUENCE */ || blockInfo2.tag === 49 /* SET */ || blockInfo2.tag >= 160 /* CONTEXT_SPECIFIC0 */) {
        const blocks = _readStruct(buffer, blockInfo2);
        for (const block of blocks) {
          dumpBlock(block, depth2 + 1);
        }
      }
    }
  }
  dump(0, 0);
}

export {
  exploreAsn1
};
//# sourceMappingURL=chunk-VI4S2NM5.mjs.map